[{"C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\index.js":"1","C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\App.js":"2","C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\context\\context.js":"3","C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\pages\\Login.js":"4","C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\pages\\Main.js":"5","C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\components\\Tasks.js":"6","C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\components\\Lists.js":"7","C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\components\\CreateList.js":"8","C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\components\\CreateTask.js":"9","C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\pages\\Register.js":"10","C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\components\\ListOptions.js":"11","C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\components\\EditList.js":"12","C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\components\\EditTask.js":"13"},{"size":373,"mtime":1612561327298,"results":"14","hashOfConfig":"15"},{"size":1269,"mtime":1613197666662,"results":"16","hashOfConfig":"15"},{"size":4634,"mtime":1613197773612,"results":"17","hashOfConfig":"15"},{"size":1219,"mtime":1612563062199,"results":"18","hashOfConfig":"15"},{"size":666,"mtime":1613198030526,"results":"19","hashOfConfig":"15"},{"size":2584,"mtime":1613076204883,"results":"20","hashOfConfig":"15"},{"size":1199,"mtime":1613071338980,"results":"21","hashOfConfig":"15"},{"size":1068,"mtime":1613197741169,"results":"22","hashOfConfig":"15"},{"size":1123,"mtime":1612989414933,"results":"23","hashOfConfig":"15"},{"size":1342,"mtime":1612986453141,"results":"24","hashOfConfig":"15"},{"size":598,"mtime":1613073592477,"results":"25","hashOfConfig":"15"},{"size":1092,"mtime":1613074360606,"results":"26","hashOfConfig":"15"},{"size":1155,"mtime":1613075100320,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"nn25on",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\index.js",[],["57","58"],"C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\App.js",[],"C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\context\\context.js",[],"C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\pages\\Login.js",[],"C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\pages\\Main.js",[],"C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\components\\Tasks.js",["59","60"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Context } from \"../context/context\";\r\nimport ListOptions from \"./ListOptions\";\r\n\r\nconst Tasks = (props) => {\r\n  const { deleteTask, tasks, getTasks } = useContext(Context);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isComplete, setIsComplete] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (props.history.location.pathname.slice(7)) {\r\n      getTasks(props.history.location.pathname.slice(7));\r\n    } else {\r\n      return;\r\n    }\r\n  }, [tasks.length, props.history.location.pathname.slice(7)]);\r\n\r\n  const markComplete = () => {\r\n    setIsComplete(!isComplete);\r\n  };\r\n\r\n  const handleGoToEdit = (taskId) => {\r\n    props.history.push(\r\n      `/edit-task/${props.history.location.pathname.slice(7)}/${taskId}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks\">\r\n      <div className=\"tasks__head\">\r\n        <h3>Tasks</h3>\r\n        <i onMouseOver={(e) => setIsOpen(!isOpen)} className=\"fas fa-cog\"></i>\r\n        {isOpen ? <ListOptions /> : \"\"}\r\n      </div>\r\n      <div className=\"tasks__body\">\r\n        {tasks.length === 0 ? (\r\n          <p>\r\n            There are not tasks here! Click the add button to create a new task.\r\n          </p>\r\n        ) : (\r\n          tasks.map((task) => {\r\n            return (\r\n              <div className=\"tasks__body-task\" key={task._id}>\r\n                <h3\r\n                  className={isComplete ? \"complete\" : \"\"}\r\n                  onClick={markComplete}\r\n                >\r\n                  {task.title}\r\n                </h3>\r\n                <div className=\"tasks__body-task-options\">\r\n                  <i\r\n                    onClick={() => handleGoToEdit(task._id)}\r\n                    className=\"fas fa-edit\"\r\n                  ></i>\r\n                  <i\r\n                    onClick={() =>\r\n                      deleteTask(\r\n                        props.history.location.pathname.slice(7),\r\n                        task._id\r\n                      )\r\n                    }\r\n                    className=\"fas fa-trash\"\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n      <div className=\"tasks__footer\">\r\n        <i\r\n          onClick={() =>\r\n            props.history.push(\r\n              `/list/${props.history.location.pathname.slice(7)}/new-task`\r\n            )\r\n          }\r\n          className=\"fas fa-plus\"\r\n        ></i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Tasks);\r\n","C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\components\\Lists.js",["61"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Context } from \"../context/context\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Lists = (props) => {\r\n  const { lists, getLists } = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    getLists();\r\n  }, [lists.length]);\r\n\r\n  const handleClick = (item) => {\r\n    props.history.push(`/lists/${item._id}`);\r\n  };\r\n\r\n  return (\r\n    <section className=\"lists\">\r\n      <h2 className=\"lists__head\">Lists</h2>\r\n      <ul className=\"lists__list\">\r\n        {lists.map((listItem) => {\r\n          return (\r\n            <li\r\n              onClick={() => handleClick(listItem)}\r\n              className={\r\n                listItem._id === props.history.location.pathname.slice(7)\r\n                  ? \"lists__list-item active\"\r\n                  : \"lists__list-item\"\r\n              }\r\n              key={listItem._id}\r\n            >\r\n              {listItem.title}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <button\r\n        onClick={() => props.history.push(\"/new-list\")}\r\n        className=\"lists__btn\"\r\n      >\r\n        + New List\r\n      </button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default withRouter(Lists);\r\n","C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\components\\CreateList.js",[],"C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\components\\CreateTask.js",[],"C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\pages\\Register.js",[],"C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\components\\ListOptions.js",[],"C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\components\\EditList.js",[],"C:\\Users\\bkkcr\\OneDrive\\Desktop\\Dev\\Projects\\task-manager\\client\\src\\components\\EditTask.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":17,"column":6,"nodeType":"68","endLine":17,"endColumn":62,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"70","line":17,"column":21,"nodeType":"71","endLine":17,"endColumn":61},{"ruleId":"66","severity":1,"message":"72","line":10,"column":6,"nodeType":"68","endLine":10,"endColumn":20,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getTasks' and 'props.history.location.pathname'. Either include them or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has a missing dependency: 'getLists'. Either include it or remove the dependency array.",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [getTasks, props.history.location.pathname, tasks.length]",{"range":"82","text":"83"},"Update the dependencies array to be: [getLists, lists.length]",{"range":"84","text":"85"},[576,632],"[getTasks, props.history.location.pathname, tasks.length]",[277,291],"[getLists, lists.length]"]